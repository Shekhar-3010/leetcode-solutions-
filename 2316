//-------------------------------DFS Approach--------------------------------
class Solution {
public:
    vector<int>mp[100001];
    bool vis[100001];
    int ret;
    void dfs(int u)
    {
        vis[u]=1;
        ret++;
        for(auto &it:mp[u])
            if(!vis[it])dfs(it);
    }
    long long countPairs(int n, vector<vector<int>>& edges) {
        for(auto &e:edges)
        {
            mp[e[0]].push_back(e[1]);
            mp[e[1]].push_back(e[0]);
        }
        long long ans=(long long)n*(n-1)/2;
        for(int i=0;i<n;i++)
        {
            if(vis[i])continue;
            ret=0;
            dfs(i);
            ans-=(long long)ret*(ret-1)/2;
        }
        return ans;
    }
};
